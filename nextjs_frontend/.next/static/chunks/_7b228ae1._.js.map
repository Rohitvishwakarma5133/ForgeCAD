{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Rohit%20Kumar/Desktop/ForgeCAD/cadly/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACxC,OAAO,IAAA,yKAAO,EAAC,IAAA,gJAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Rohit%20Kumar/Desktop/ForgeCAD/cadly/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n        \"icon-sm\": \"size-8\",\n        \"icon-lg\": \"size-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,IAAA,0KAAG,EACxB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;YACN,WAAW;YACX,WAAW;QACb;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,KASb;QATa,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF,GATa;IAUd,MAAM,OAAO,UAAU,2KAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Rohit%20Kumar/Desktop/ForgeCAD/cadly/lib/constants.ts"],"sourcesContent":["import { PricingTier } from '@/types';\r\n\r\nexport const COMPANY_NAME = 'CADly';\r\nexport const COMPANY_TAGLINE = 'Transform Legacy Drawings into Digital Intelligence';\r\n\r\nexport const SUPPORTED_FILE_TYPES = {\r\n  'image/*': ['.png', '.jpg', '.jpeg', '.tiff', '.bmp'],\r\n  'application/pdf': ['.pdf'],\r\n  'application/acad': ['.dwg', '.dxf'],\r\n};\r\n\r\nexport const MAX_FILE_SIZE = 50 * 1024 * 1024; // 50MB\r\n\r\nexport const NAVIGATION_ITEMS = [\r\n  { name: 'Features', href: '/features' },\r\n  { name: 'Pricing', href: '/pricing' },\r\n  { name: 'Demo', href: '/demo' },\r\n  { name: 'About', href: '/about' },\r\n  { name: 'Contact', href: '/contact' },\r\n];\r\n\r\nexport const DASHBOARD_NAVIGATION = [\r\n  { name: 'Dashboard', href: '/dashboard' },\r\n  { name: 'Upload Drawing', href: '/dashboard/upload' },\r\n  { name: 'My Projects', href: '/dashboard/projects' },\r\n  { name: 'History', href: '/dashboard/history' },\r\n];\r\n\r\nexport const PRICING_TIERS: PricingTier[] = [\r\n  {\r\n    id: 'pay-per-drawing',\r\n    name: 'Pay-Per-Drawing',\r\n    price: 10,\r\n    period: 'per-drawing',\r\n    features: [\r\n      'Simple drawings from $10',\r\n      'Complex drawings up to $25',\r\n      'No subscription required',\r\n      '48-hour processing',\r\n      'Email delivery',\r\n      'Basic support'\r\n    ],\r\n    limits: {\r\n      processingTime: '48 hours',\r\n      apiAccess: false,\r\n      support: 'Email'\r\n    }\r\n  },\r\n  {\r\n    id: 'professional',\r\n    name: 'Professional',\r\n    price: 499,\r\n    period: 'monthly',\r\n    features: [\r\n      '100 drawings included',\r\n      '$5 per additional drawing',\r\n      '4-hour priority SLA',\r\n      'API access',\r\n      'Batch upload',\r\n      'Custom validation rules',\r\n      'Priority support'\r\n    ],\r\n    limits: {\r\n      drawingsPerMonth: 100,\r\n      processingTime: '4 hours',\r\n      apiAccess: true,\r\n      support: 'Email + Chat'\r\n    },\r\n    popular: true\r\n  },\r\n  {\r\n    id: 'enterprise',\r\n    name: 'Enterprise',\r\n    price: 0, // Custom pricing\r\n    period: 'monthly',\r\n    features: [\r\n      'Unlimited drawings',\r\n      'Dedicated infrastructure',\r\n      'On-premise option',\r\n      'Custom AI training',\r\n      'Integration support',\r\n      '99.9% SLA',\r\n      '24/7 phone support',\r\n      'Dedicated account manager'\r\n    ],\r\n    limits: {\r\n      processingTime: '1 hour',\r\n      apiAccess: true,\r\n      support: '24/7 Phone + Dedicated AM'\r\n    }\r\n  }\r\n];\r\n\r\nexport const PROCESSING_STAGES = [\r\n  { stage: 'upload', label: 'Uploading file...', progress: 10 },\r\n  { stage: 'preprocessing', label: 'Preprocessing image...', progress: 25 },\r\n  { stage: 'symbol_detection', label: 'Detecting symbols...', progress: 45 },\r\n  { stage: 'text_extraction', label: 'Extracting text...', progress: 65 },\r\n  { stage: 'connection_tracing', label: 'Tracing connections...', progress: 80 },\r\n  { stage: 'validation', label: 'Validating results...', progress: 95 },\r\n  { stage: 'complete', label: 'Complete!', progress: 100 },\r\n];\r\n\r\nexport const STATS = [\r\n  { value: '95%', label: 'Faster' },\r\n  { value: '96%', label: 'Cost Reduction' },\r\n  { value: '91.5%', label: 'Accuracy' },\r\n  { value: '50K+', label: 'Drawings Processed' }\r\n];\r\n\r\nexport const INDUSTRIES = [\r\n  {\r\n    name: 'Oil & Gas',\r\n    description: 'Brownfield modernization and digital transformation',\r\n    icon: 'üõ¢Ô∏è'\r\n  },\r\n  {\r\n    name: 'Power Plants',\r\n    description: 'Digital twin creation and asset management',\r\n    icon: '‚ö°'\r\n  },\r\n  {\r\n    name: 'Manufacturing',\r\n    description: 'Legacy equipment digitization',\r\n    icon: 'üè≠'\r\n  },\r\n  {\r\n    name: 'Construction',\r\n    description: 'As-built documentation and BIM integration',\r\n    icon: 'üèóÔ∏è'\r\n  },\r\n  {\r\n    name: 'Facility Management',\r\n    description: 'Building system mapping and maintenance',\r\n    icon: 'üè¢'\r\n  }\r\n];\r\n\r\nexport const FEATURES = [\r\n  {\r\n    title: 'Multi-Format Input',\r\n    description: 'Support for PDF, images, legacy CAD files, and handwritten drawings',\r\n    icon: 'üìÅ'\r\n  },\r\n  {\r\n    title: '94% Symbol Detection',\r\n    description: 'AI-powered recognition of 200+ engineering symbols with high accuracy',\r\n    icon: 'üéØ'\r\n  },\r\n  {\r\n    title: 'Native CAD Output',\r\n    description: 'Generate AutoCAD, Plant 3D, and other industry-standard formats',\r\n    icon: 'üìê'\r\n  },\r\n  {\r\n    title: '3D Model Generation',\r\n    description: 'Automatic creation of 3D models from 2D drawings',\r\n    icon: 'üé≤'\r\n  },\r\n  {\r\n    title: 'Enterprise Integration',\r\n    description: 'APIs for SAP, Maximo, and other enterprise systems',\r\n    icon: 'üîó'\r\n  },\r\n  {\r\n    title: 'Quality Assurance',\r\n    description: 'Confidence scoring and engineering validation rules',\r\n    icon: '‚úÖ'\r\n  }\r\n];"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAEO,MAAM,eAAe;AACrB,MAAM,kBAAkB;AAExB,MAAM,uBAAuB;IAClC,WAAW;QAAC;QAAQ;QAAQ;QAAS;QAAS;KAAO;IACrD,mBAAmB;QAAC;KAAO;IAC3B,oBAAoB;QAAC;QAAQ;KAAO;AACtC;AAEO,MAAM,gBAAgB,KAAK,OAAO,MAAM,OAAO;AAE/C,MAAM,mBAAmB;IAC9B;QAAE,MAAM;QAAY,MAAM;IAAY;IACtC;QAAE,MAAM;QAAW,MAAM;IAAW;IACpC;QAAE,MAAM;QAAQ,MAAM;IAAQ;IAC9B;QAAE,MAAM;QAAS,MAAM;IAAS;IAChC;QAAE,MAAM;QAAW,MAAM;IAAW;CACrC;AAEM,MAAM,uBAAuB;IAClC;QAAE,MAAM;QAAa,MAAM;IAAa;IACxC;QAAE,MAAM;QAAkB,MAAM;IAAoB;IACpD;QAAE,MAAM;QAAe,MAAM;IAAsB;IACnD;QAAE,MAAM;QAAW,MAAM;IAAqB;CAC/C;AAEM,MAAM,gBAA+B;IAC1C;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,QAAQ;QACR,UAAU;YACR;YACA;YACA;YACA;YACA;YACA;SACD;QACD,QAAQ;YACN,gBAAgB;YAChB,WAAW;YACX,SAAS;QACX;IACF;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,QAAQ;QACR,UAAU;YACR;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACD,QAAQ;YACN,kBAAkB;YAClB,gBAAgB;YAChB,WAAW;YACX,SAAS;QACX;QACA,SAAS;IACX;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,QAAQ;QACR,UAAU;YACR;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACD,QAAQ;YACN,gBAAgB;YAChB,WAAW;YACX,SAAS;QACX;IACF;CACD;AAEM,MAAM,oBAAoB;IAC/B;QAAE,OAAO;QAAU,OAAO;QAAqB,UAAU;IAAG;IAC5D;QAAE,OAAO;QAAiB,OAAO;QAA0B,UAAU;IAAG;IACxE;QAAE,OAAO;QAAoB,OAAO;QAAwB,UAAU;IAAG;IACzE;QAAE,OAAO;QAAmB,OAAO;QAAsB,UAAU;IAAG;IACtE;QAAE,OAAO;QAAsB,OAAO;QAA0B,UAAU;IAAG;IAC7E;QAAE,OAAO;QAAc,OAAO;QAAyB,UAAU;IAAG;IACpE;QAAE,OAAO;QAAY,OAAO;QAAa,UAAU;IAAI;CACxD;AAEM,MAAM,QAAQ;IACnB;QAAE,OAAO;QAAO,OAAO;IAAS;IAChC;QAAE,OAAO;QAAO,OAAO;IAAiB;IACxC;QAAE,OAAO;QAAS,OAAO;IAAW;IACpC;QAAE,OAAO;QAAQ,OAAO;IAAqB;CAC9C;AAEM,MAAM,aAAa;IACxB;QACE,MAAM;QACN,aAAa;QACb,MAAM;IACR;IACA;QACE,MAAM;QACN,aAAa;QACb,MAAM;IACR;IACA;QACE,MAAM;QACN,aAAa;QACb,MAAM;IACR;IACA;QACE,MAAM;QACN,aAAa;QACb,MAAM;IACR;IACA;QACE,MAAM;QACN,aAAa;QACb,MAAM;IACR;CACD;AAEM,MAAM,WAAW;IACtB;QACE,OAAO;QACP,aAAa;QACb,MAAM;IACR;IACA;QACE,OAAO;QACP,aAAa;QACb,MAAM;IACR;IACA;QACE,OAAO;QACP,aAAa;QACb,MAAM;IACR;IACA;QACE,OAAO;QACP,aAAa;QACb,MAAM;IACR;IACA;QACE,OAAO;QACP,aAAa;QACb,MAAM;IACR;IACA;QACE,OAAO;QACP,aAAa;QACb,MAAM;IACR;CACD","debugId":null}},
    {"offset": {"line": 359, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Rohit%20Kumar/Desktop/ForgeCAD/cadly/components/layout/Navbar.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Menu, X, Zap } from 'lucide-react';\r\nimport { NAVIGATION_ITEMS, COMPANY_NAME } from '@/lib/constants';\r\n\r\nexport default function Navbar() {\r\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\r\n\r\n  const toggleMobileMenu = () => {\r\n    setIsMobileMenuOpen(!isMobileMenuOpen);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"sticky top-0 z-50 bg-white/95 backdrop-blur-sm border-b\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"flex justify-between items-center h-16\">\r\n          {/* Logo */}\r\n          <Link href=\"/\" className=\"flex items-center space-x-2\">\r\n            <div className=\"bg-gradient-to-br from-blue-600 to-purple-600 p-2 rounded-lg\">\r\n              <Zap className=\"h-6 w-6 text-white\" />\r\n            </div>\r\n            <span className=\"text-xl font-bold text-gray-900\">{COMPANY_NAME}</span>\r\n          </Link>\r\n\r\n          {/* Desktop Navigation */}\r\n          <div className=\"hidden md:flex items-center space-x-8\">\r\n            {NAVIGATION_ITEMS.map((item) => (\r\n              <Link\r\n                key={item.name}\r\n                href={item.href}\r\n                className=\"text-gray-600 hover:text-blue-600 px-3 py-2 text-sm font-medium transition-colors\"\r\n              >\r\n                {item.name}\r\n              </Link>\r\n            ))}\r\n          </div>\r\n\r\n          {/* CTA Buttons - Desktop */}\r\n          <div className=\"hidden md:flex items-center space-x-4\">\r\n            <Link href=\"/demo\">\r\n              <Button variant=\"outline\">Try Demo</Button>\r\n            </Link>\r\n            <Link href=\"/dashboard\">\r\n              <Button>Dashboard</Button>\r\n            </Link>\r\n          </div>\r\n\r\n          {/* Mobile menu button */}\r\n          <div className=\"md:hidden\">\r\n            <Button\r\n              variant=\"ghost\"\r\n              size=\"sm\"\r\n              onClick={toggleMobileMenu}\r\n              aria-label=\"Toggle mobile menu\"\r\n            >\r\n              {isMobileMenuOpen ? (\r\n                <X className=\"h-6 w-6\" />\r\n              ) : (\r\n                <Menu className=\"h-6 w-6\" />\r\n              )}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Mobile Navigation Menu */}\r\n        {isMobileMenuOpen && (\r\n          <div className=\"md:hidden border-t\">\r\n            <div className=\"px-2 pt-2 pb-3 space-y-1\">\r\n              {NAVIGATION_ITEMS.map((item) => (\r\n                <Link\r\n                  key={item.name}\r\n                  href={item.href}\r\n                  className=\"text-gray-600 hover:text-blue-600 block px-3 py-2 text-base font-medium transition-colors\"\r\n                  onClick={() => setIsMobileMenuOpen(false)}\r\n                >\r\n                  {item.name}\r\n                </Link>\r\n              ))}\r\n              <div className=\"pt-4 border-t space-y-2\">\r\n                <Link href=\"/demo\" onClick={() => setIsMobileMenuOpen(false)}>\r\n                  <Button variant=\"outline\" className=\"w-full\">\r\n                    Try Demo\r\n                  </Button>\r\n                </Link>\r\n                <Link href=\"/dashboard\" onClick={() => setIsMobileMenuOpen(false)}>\r\n                  <Button className=\"w-full\">Dashboard</Button>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;AANA;;;;;;AAQe,SAAS;;IACtB,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,yKAAQ,EAAC;IAEzD,MAAM,mBAAmB;QACvB,oBAAoB,CAAC;IACvB;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCAEb,6LAAC,0KAAI;4BAAC,MAAK;4BAAI,WAAU;;8CACvB,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC,0MAAG;wCAAC,WAAU;;;;;;;;;;;8CAEjB,6LAAC;oCAAK,WAAU;8CAAmC,mIAAY;;;;;;;;;;;;sCAIjE,6LAAC;4BAAI,WAAU;sCACZ,uIAAgB,CAAC,GAAG,CAAC,CAAC,qBACrB,6LAAC,0KAAI;oCAEH,MAAM,KAAK,IAAI;oCACf,WAAU;8CAET,KAAK,IAAI;mCAJL,KAAK,IAAI;;;;;;;;;;sCAUpB,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,0KAAI;oCAAC,MAAK;8CACT,cAAA,6LAAC,wIAAM;wCAAC,SAAQ;kDAAU;;;;;;;;;;;8CAE5B,6LAAC,0KAAI;oCAAC,MAAK;8CACT,cAAA,6LAAC,wIAAM;kDAAC;;;;;;;;;;;;;;;;;sCAKZ,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,wIAAM;gCACL,SAAQ;gCACR,MAAK;gCACL,SAAS;gCACT,cAAW;0CAEV,iCACC,6LAAC,oMAAC;oCAAC,WAAU;;;;;yDAEb,6LAAC,6MAAI;oCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;gBAOvB,kCACC,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;;4BACZ,uIAAgB,CAAC,GAAG,CAAC,CAAC,qBACrB,6LAAC,0KAAI;oCAEH,MAAM,KAAK,IAAI;oCACf,WAAU;oCACV,SAAS,IAAM,oBAAoB;8CAElC,KAAK,IAAI;mCALL,KAAK,IAAI;;;;;0CAQlB,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,0KAAI;wCAAC,MAAK;wCAAQ,SAAS,IAAM,oBAAoB;kDACpD,cAAA,6LAAC,wIAAM;4CAAC,SAAQ;4CAAU,WAAU;sDAAS;;;;;;;;;;;kDAI/C,6LAAC,0KAAI;wCAAC,MAAK;wCAAa,SAAS,IAAM,oBAAoB;kDACzD,cAAA,6LAAC,wIAAM;4CAAC,WAAU;sDAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAS7C;GAzFwB;KAAA","debugId":null}}]
}
(()=>{var a={};a.id=7,a.ids=[7],a.modules={261:a=>{"use strict";a.exports=require("next/dist/shared/lib/router/utils/app-paths")},3295:a=>{"use strict";a.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:a=>{"use strict";a.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},19121:a=>{"use strict";a.exports=require("next/dist/server/app-render/action-async-storage.external.js")},29294:a=>{"use strict";a.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:a=>{"use strict";a.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},63033:a=>{"use strict";a.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},76086:(a,b,c)=>{"use strict";c.r(b),c.d(b,{handler:()=>I,patchFetch:()=>H,routeModule:()=>D,serverHooks:()=>G,workAsyncStorage:()=>E,workUnitAsyncStorage:()=>F});var d={};c.r(d),c.d(d,{GET:()=>C,POST:()=>B});var e=c(95736),f=c(9117),g=c(4044),h=c(39326),i=c(32324),j=c(261),k=c(54290),l=c(85328),m=c(38928),n=c(46595),o=c(3421),p=c(17679),q=c(41681),r=c(63446),s=c(86439),t=c(51356),u=c(10641);class v{parseTag(a){let b=[],c=a.trim();c=this.cleanupTag(c);let{tag:d,substitutions:e}=this.applyCharacterSubstitutions(c);c=d,e.length>0&&b.push(`Character substitutions applied: ${e.join(", ")}`);let f=this.extractComponents(c),{category:g,confidence:h,matchedRule:i}=this.validateTag(c);return i||b.push("Tag does not match any known pattern"),b.push(...this.performAdditionalValidation(c,f)),{originalTag:a,normalizedTag:c,confidence:h,issues:b,category:g,components:f}}cleanupTag(a){return a.trim().replace(/\s+/g," ").replace(/[^\w\-"'\.]/g,"").toUpperCase()}applyCharacterSubstitutions(a){let b=a,c=[];for(let[a,d]of(b=b.replace(/[OIL]\d+|\d+[OIL]/g,a=>{let b=a;for(let[d,e]of Object.entries(this.characterSubstitutions))a.includes(d)&&/\d/.test(a)&&(b=b.replace(RegExp(d,"g"),e),c.push(`${d} → ${e}`));return b}),Object.entries(this.characterSubstitutions)))b.includes(a)&&!c.some(b=>b.startsWith(a))&&(b=b.replace(RegExp(a,"g"),d),c.push(`${a} → ${d}`));return{tag:b,substitutions:c}}extractComponents(a){let b={},c=a.match(/^([A-Z]+)-(\d+)([A-Z]?)$/);if(c)return b.prefix=c[1],b.number=c[2],b.suffix=c[3]||void 0,b;let d=a.match(/^(\d+)["\s]*-([A-Z]+)-(\d+)$/);return d&&(b.prefix=d[2],b.number=d[1],b.suffix=d[3],b.unit='"'),b}validateTag(a){for(let b of this.validationRules)if(b.pattern.test(a))return{category:b.category,confidence:b.confidence,matchedRule:b};return{category:"unknown",confidence:.1}}performAdditionalValidation(a,b){let c=[];if(a.includes("00")&&!a.includes("100")&&c.push("Possible OCR error: double zeros detected"),(a.includes("II")||a.includes("11"))&&c.push("Possible OCR error: double ones/I detected"),b.prefix&&b.number){let a=parseInt(b.number);(a<100||a>999)&&c.push("Equipment number outside typical range (100-999)")}return c}normalizeUnits(a){let b=a;for(let[a,c]of Object.entries(this.unitNormalizations)){let d=RegExp(`\\b${a}\\b`,"gi");b=b.replace(d,c)}return b}parseTagsBatch(a){return a.map(a=>this.parseTag(a))}getValidationStats(a){let b=a.filter(a=>a.confidence>.7).length,c=a.reduce((a,b)=>a+b.confidence,0)/a.length,d={},e={};for(let b of a)for(let a of(d[b.category]=(d[b.category]||0)+1,b.issues))e[a]=(e[a]||0)+1;return{totalTags:a.length,validTags:b,invalidTags:a.length-b,averageConfidence:c,categoryBreakdown:d,commonIssues:e}}constructor(){this.validationRules=[{pattern:/^P-\d{3}[A-Z]?$/i,category:"pump",description:"Standard pump tag format",confidence:.95},{pattern:/^[A-Z]*V-\d{3}[A-Z]?$/i,category:"valve",description:"Standard valve tag format",confidence:.9},{pattern:/^[A-Z]{2,3}[A-Z]?-\d{3}[A-Z]?$/i,category:"instrument",description:"Standard instrument tag format (ISA)",confidence:.85},{pattern:/^[TRD]-\d{3}[A-Z]?$/i,category:"vessel",description:"Standard vessel tag format",confidence:.9},{pattern:/^\d+["\s]*-[A-Z]{2,4}-\d{3}$/i,category:"line",description:"Standard line specification format",confidence:.8}],this.characterSubstitutions={O:"0",I:"1",S:"5",Z:"2",l:"1","|":"1",_:"-","‐":"-","—":"-",'"':'"'},this.unitNormalizations={inch:'"',inches:'"',in:'"',"''":'"',psi:"PSI",psig:"PSIG",bar:"BAR",barg:"BARG",cs:"CS",carbonSteel:"CS",carbon_steel:"CS",ss:"SS",stainlessSteel:"SS",stainless_steel:"SS",ss316:"SS316",ss304:"SS304"}}}class w{constructor(){this.proximityThreshold=50,this.similarityThreshold=.8,this.tagParser=new v}detectMissingEquipment(a,b){let c=this.filterRelevantEntities(a),d=this.normalizeExtractedTags(b),e=this.findMatches(c,d),f=this.findMissingTags(c,e),g=this.findFalsePositives(d,e),h=this.calculateConfidence(c.length,e.length),i=this.generateRecommendations(f,g,e);return{dwgEntities:c,extractedTags:d,analysis:{totalDwgEntities:c.length,totalExtractedTags:d.length,matchedTags:e,missingTags:f,falsePositives:g,confidence:h,recommendations:i}}}filterRelevantEntities(a){let b=["pump","valve","tank","vessel","instrument","meter","sensor","compressor","exchanger","heater","cooler","separator","filter"],c=["equipment","instruments","piping","process","vessels","pumps","valves","tanks","pid","mechanical"];return a.filter(a=>{if("block"===a.type&&a.name){let c=a.name.toLowerCase();return b.some(a=>c.includes(a))}if(("text"===a.type||"mtext"===a.type||"attribute"===a.type)&&a.text){let b=this.tagParser.parseTag(a.text);return"unknown"!==b.category&&b.confidence>.3}let d=a.layer.toLowerCase();return c.some(a=>d.includes(a))})}normalizeExtractedTags(a){return a.map(a=>{let b=this.tagParser.parseTag(a.tag);return{...a,tag:b.normalizedTag,confidence:Math.min(a.confidence,b.confidence)}}).filter(a=>a.confidence>.1)}findMatches(a,b){let c=[];for(let d of a){let a=this.findBestMatch(d,b);a&&c.push(a)}return this.resolveDuplicateMatches(c)}findBestMatch(a,b){let c=null,d=0;for(let e of b){let b=this.calculateSpatialDistance(a.geometry,e.geometry);if(b>this.proximityThreshold)continue;let f=this.calculateTextSimilarity(a,e),g=this.calculateMatchConfidence(b,f,e.confidence);g>d&&g>.5&&(c={dwgEntity:a,extractedTag:e,confidence:g,spatialDistance:b,textSimilarity:f},d=g)}return c}calculateSpatialDistance(a,b){let c={x:a.x+(a.width||0)/2,y:a.y+(a.height||0)/2},d={x:b.x+b.width/2,y:b.y+b.height/2};return Math.sqrt(Math.pow(c.x-d.x,2)+Math.pow(c.y-d.y,2))}calculateTextSimilarity(a,b){if(a.text)return this.stringSimilarity(a.text,b.tag);if("block"===a.type&&a.name){let c=this.tagParser.parseTag(b.tag),d=a.name.toLowerCase();return(({pump:["pump","centrifugal","positive"],valve:["valve","gate","globe","ball","butterfly"],vessel:["tank","vessel","drum","tower","column"],instrument:["instrument","meter","gauge","transmitter","indicator"]})[c.category]||[]).some(a=>d.includes(a))?.8:.3}return .1}stringSimilarity(a,b){let c=a.length,d=b.length;if(0===c||0===d)return 0;let e=Array(c+1).fill(null).map(()=>Array(d+1).fill(null));for(let a=0;a<=c;a++)e[a][0]=a;for(let a=0;a<=d;a++)e[0][a]=a;for(let f=1;f<=c;f++)for(let c=1;c<=d;c++){let d=+(a[f-1]!==b[c-1]);e[f][c]=Math.min(e[f-1][c]+1,e[f][c-1]+1,e[f-1][c-1]+d)}let f=Math.max(c,d);return(f-e[c][d])/f}calculateMatchConfidence(a,b,c){return .3*Math.max(0,1-a/this.proximityThreshold)+.4*b+.3*c}resolveDuplicateMatches(a){let b=[],c=new Set;for(let d of a.sort((a,b)=>b.confidence-a.confidence)){let a=`${d.extractedTag.tag}-${d.extractedTag.geometry.x}-${d.extractedTag.geometry.y}`;c.has(a)||(b.push(d),c.add(a))}return b}findMissingTags(a,b){let c=new Set(b.map(a=>a.dwgEntity.id));return a.filter(a=>!c.has(a.id))}findFalsePositives(a,b){let c=new Set(b.map(a=>`${a.extractedTag.tag}-${a.extractedTag.geometry.x}-${a.extractedTag.geometry.y}`));return a.filter(a=>{let b=`${a.tag}-${a.geometry.x}-${a.geometry.y}`;return!c.has(b)})}calculateConfidence(a,b){return 0===a?1:b/a}generateRecommendations(a,b,c){let d=[];if(a.length>0)for(let[b,c]of(d.push(`${a.length} equipment items were found in DWG but not extracted. Consider multi-pass OCR or manual review.`),Object.entries(this.groupByLayer(a))))c>1&&d.push(`Multiple missing items on layer '${b}' - check layer visibility settings.`);if(b.length>0){d.push(`${b.length} tags were extracted but not found in DWG. Review extraction accuracy.`);let a=b.filter(a=>a.confidence<.5);a.length>0&&d.push(`${a.length} false positives have low confidence - consider raising confidence threshold.`)}let e=c.filter(a=>a.confidence<.7);return e.length>0&&d.push(`${e.length} matches have low confidence - manual review recommended.`),0===d.length&&d.push("All equipment items appear to be correctly detected and matched."),d}groupByLayer(a){let b={};for(let c of a)b[c.layer]=(b[c.layer]||0)+1;return b}exportReport(a){let{analysis:b}=a,c="# Missing Equipment Detection Report\n\n";if(c+=`## Summary
- Total DWG Entities: ${b.totalDwgEntities}
- Total Extracted Tags: ${b.totalExtractedTags}
- Successful Matches: ${b.matchedTags.length}
- Missing Tags: ${b.missingTags.length}
- False Positives: ${b.falsePositives.length}
- Overall Confidence: ${(100*b.confidence).toFixed(1)}%

`,b.missingTags.length>0){for(let a of(c+=`## Missing Tags (${b.missingTags.length})
`,b.missingTags))c+=`- ${a.type} "${a.name||a.text||"Unknown"}" on layer "${a.layer}"
`;c+="\n"}if(b.falsePositives.length>0){for(let a of(c+=`## False Positives (${b.falsePositives.length})
`,b.falsePositives))c+=`- "${a.tag}" (confidence: ${(100*a.confidence).toFixed(1)}%)
`;c+="\n"}for(let a of(c+=`## Recommendations
`,b.recommendations))c+=`- ${a}
`;return c}}class x{constructor(){this.symbolTemplates=[],this.validationRules=[],this.initializeSymbolTemplates(),this.initializeValidationRules()}validateExtraction(a,b){let c=[];for(let d of a){let a=this.validateSymbol(d,b);c.push(a)}for(let d of this.findOrphanedTags(b,a)){let b=this.validateOrphanedTag(d,a);c.push(b)}return c}validateSymbol(a,b){let c=[],d=[],e=a.confidence,f=this.findNearbyTags(a,b);0===f.length&&(c.push({type:"orphaned_tag",severity:"high",description:"Symbol detected without any nearby identifying tags",affectedArea:a.geometry}),e*=.3,d.push("Verify symbol detection accuracy - symbols should have identifying tags nearby"));let g=this.validateGeometry(a);for(let b of(g.valid||(c.push({type:"geometry",severity:"medium",description:g.reason,affectedArea:a.geometry}),e*=.7,d.push("Review symbol detection parameters for size and proportion accuracy")),f))this.validateTagSymbolMatch(b,a).valid||(c.push({type:"symbol_tag_mismatch",severity:"medium",description:`Tag "${b.tag}" doesn't match expected pattern for ${a.template.name}`,affectedArea:b.geometry}),e*=.8,d.push(`Review tag extraction for ${a.template.name} symbols`));return this.findDuplicateSymbols(a,[]).length>0&&(c.push({type:"duplicate",severity:"medium",description:"Multiple similar symbols detected in same area",affectedArea:a.geometry}),e*=.6,d.push("Remove duplicate symbol detections")),a.confidence<.5&&(c.push({type:"low_confidence",severity:"high",description:"Symbol detection confidence below acceptable threshold",affectedArea:a.geometry}),d.push("Consider removing low-confidence detections or improving detection algorithm")),{item:a,isValid:e>.6&&!c.some(a=>"high"===a.severity),confidence:e,issues:c,recommendations:d}}validateOrphanedTag(a,b){let c=[],d=[],e=a.confidence;return this.isValidOrphanedTag(a)||(c.push({type:"orphaned_tag",severity:"high",description:"Tag extracted without corresponding symbol nearby",affectedArea:a.geometry}),e*=.3,d.push("Verify tag extraction accuracy - equipment tags should have corresponding symbols")),this.isLikelyNoise(a)&&(c.push({type:"geometry",severity:"high",description:"Tag appears to be extraction noise or artifact",affectedArea:a.geometry}),e*=.2,d.push("Review OCR preprocessing to reduce noise artifacts")),{item:a,isValid:e>.5&&!c.some(a=>"high"===a.severity),confidence:e,issues:c,recommendations:d}}findNearbyTags(a,b){let c=[];for(let d of a.template.expectedTags){let e=b.filter(b=>{let c=this.calculateDistance({x:a.geometry.x+a.geometry.width/2,y:a.geometry.y+a.geometry.height/2},{x:b.geometry.x+b.geometry.width/2,y:b.geometry.y+b.geometry.height/2}),e=d.pattern.test(b.tag),f=c<=d.proximity,g=this.isInExpectedPosition(a.geometry,b.geometry,d.relativePosition);return e&&f&&g});c.push(...e)}let d=[...c,...b.filter(b=>100>=this.calculateDistance({x:a.geometry.x+a.geometry.width/2,y:a.geometry.y+a.geometry.height/2},{x:b.geometry.x+b.geometry.width/2,y:b.geometry.y+b.geometry.height/2}))];return d.filter((a,b)=>d.findIndex(b=>b.tag===a.tag&&b.geometry.x===a.geometry.x)===b)}findOrphanedTags(a,b){return a.filter(a=>!b.some(b=>100>=this.calculateDistance({x:a.geometry.x+a.geometry.width/2,y:a.geometry.y+a.geometry.height/2},{x:b.geometry.x+b.geometry.width/2,y:b.geometry.y+b.geometry.height/2})))}validateGeometry(a){let b=a.template,c=a.geometry,d=c.width/c.height,e=b.geometry.width/b.geometry.height;return Math.abs(d-e)>.3?{valid:!1,reason:`Aspect ratio mismatch: expected ${e.toFixed(2)}, got ${d.toFixed(2)}`}:c.width<10||c.height<10?{valid:!1,reason:"Symbol too small to be realistic"}:c.width>200||c.height>200?{valid:!1,reason:"Symbol too large to be typical equipment symbol"}:{valid:!0,reason:""}}validateTagSymbolMatch(a,b){for(let c of b.template.expectedTags.map(a=>a.pattern))if(c.test(a.tag))return{valid:!0,reason:""};return{valid:!1,reason:`Tag "${a.tag}" doesn't match any expected patterns for ${b.template.name}`}}isValidOrphanedTag(a){return[/^\d+["\s]*-[A-Z]{2,4}-\d{3}$/,/^NOTE:/i,/^TYP\.?$/i,/^NORTH$/i,/^SCALE/i,/^DWG/i,/^REV/i].some(b=>b.test(a.tag))}isLikelyNoise(a){return!(!(a.geometry.width<5)&&!(a.geometry.height<5)&&(1!==a.tag.length||/[A-Z0-9]/.test(a.tag)))||[/^[|\\\/\-_]+$/,/^\.+$/,/^[,;:]+$/].some(b=>b.test(a.tag))}findDuplicateSymbols(a,b){let c=[];for(let d of b)d.id!==a.id&&this.calculateOverlap(a.geometry,d.geometry)>.5&&a.template.id===d.template.id&&c.push(d);return c}isInExpectedPosition(a,b,c){let d={x:a.x+a.width/2,y:a.y+a.height/2},e={x:b.x+b.width/2,y:b.y+b.height/2};switch(c){case"top":return e.y<a.y-20;case"bottom":return e.y>a.y+a.height+20;case"left":return e.x<a.x-20;case"right":return e.x>a.x+a.width+20;case"center":return 20>Math.abs(e.x-d.x)&&20>Math.abs(e.y-d.y);default:return!0}}calculateDistance(a,b){return Math.sqrt(Math.pow(a.x-b.x,2)+Math.pow(a.y-b.y,2))}calculateOverlap(a,b){let c=Math.max(a.x,b.x),d=Math.max(a.y,b.y),e=Math.min(a.x+a.width,b.x+b.width),f=Math.min(a.y+a.height,b.y+b.height);if(e<=c||f<=d)return 0;let g=(e-c)*(f-d),h=a.width*a.height;return g/(h+b.width*b.height-g)}initializeSymbolTemplates(){this.symbolTemplates=[{id:"centrifugal_pump",name:"Centrifugal Pump",category:"pump",geometry:{width:40,height:30,keyPoints:[{x:0,y:15,type:"connection"},{x:40,y:15,type:"connection"},{x:20,y:15,type:"center"}]},expectedTags:[{pattern:/^P-\d{3}[A-Z]?$/,proximity:60,relativePosition:"bottom"}]},{id:"gate_valve",name:"Gate Valve",category:"valve",geometry:{width:20,height:20,keyPoints:[{x:10,y:10,type:"center"}]},expectedTags:[{pattern:/^[A-Z]*V-\d{3}[A-Z]?$/,proximity:40,relativePosition:"top"}]},{id:"pressure_transmitter",name:"Pressure Transmitter",category:"instrument",geometry:{width:25,height:25,keyPoints:[{x:12.5,y:12.5,type:"center"}]},expectedTags:[{pattern:/^P[TI]-\d{3}[A-Z]?$/,proximity:50,relativePosition:"bottom"}]}]}initializeValidationRules(){this.validationRules=[]}generateValidationReport(a){let b=a.filter(a=>a.isValid).length,c=a.length-b,d=a.reduce((a,b)=>a+b.confidence,0)/a.length,e="# False Positive Validation Report\n\n";e+=`## Summary
- Total Items Validated: ${a.length}
- Valid Items: ${b}
- Invalid Items (Potential False Positives): ${c}
- Average Confidence: ${(100*d).toFixed(1)}%

`;let f=a.filter(a=>!a.isValid);if(f.length>0)for(let a of(e+=`## Potential False Positives (${f.length})
`,f)){let b="template"in a.item?`Symbol: ${a.item.template.name}`:`Tag: ${a.item.tag}`;for(let c of(e+=`### ${b}
- Confidence: ${(100*a.confidence).toFixed(1)}%
- Issues:
`,a.issues))e+=`  - ${c.description} (${c.severity})
`;for(let b of(e+=`- Recommendations:
`,a.recommendations))e+=`  - ${b}
`;e+="\n"}return e}}class y{validateInstrumentMappings(a,b,c){let d=[];for(let e of a){console.log(`🔍 Validating instrument ${e.instrumentTag}...`);let a=this.validateSingleInstrument(e,b,c);d.push(a)}return d}validateSingleInstrument(a,b,c){let d=[],e=[],f=[],g=1,h=this.traceProcessConnections(a,c),i=this.findConnectedEquipment(a,b,h),j=this.validateInstrumentTypeMatch(a,i);j.valid||(d.push({type:"wrong_equipment",severity:"high",description:j.reason,suggestedFix:j.suggestedFix}),g*=.5);let k=this.validateConnectionTopology(a,h);k.valid||(d.push({type:"invalid_line_type",severity:"medium",description:k.reason,suggestedFix:k.suggestedFix}),g*=.7);let l=this.validateFlowDirection(a,h);l.valid||(d.push({type:"flow_direction_error",severity:"medium",description:l.reason,suggestedFix:l.suggestedFix}),g*=.8);let m=this.checkMissingConnections(a);for(let a of m)d.push({type:"missing_connection",severity:a.required?"high":"low",description:a.description,suggestedFix:a.suggestedFix}),a.required&&(g*=.6);for(let b of i)f.push({targetId:b.id,targetType:"equipment",targetTag:b.tag,connectionType:"process",confidence:this.calculateMappingConfidence(a,b,h)});for(let b of h)f.push({targetId:b.id,targetType:"line",targetTag:`${b.type}-${b.size||"unknown"}`,connectionType:b.type,confidence:this.calculateLineConnectionConfidence(a,b)});0===d.length?e.push(`✅ Instrument ${a.instrumentTag} is correctly mapped`):(e.push(`🔧 Review ${a.instrumentTag} connections`),d.some(a=>"wrong_equipment"===a.type)&&e.push("Verify instrument is connected to correct process equipment"),d.some(a=>"flow_direction_error"===a.type)&&e.push("Check flow direction arrows and instrument orientation"),m.length>0&&e.push("Add missing signal/power connections as required"));let n=g>.7&&!d.some(a=>"high"===a.severity);return{instrumentId:a.instrumentId,isValid:n,confidence:g,issues:d,recommendations:e,correctMappings:f}}traceProcessConnections(a,b){let c=[],d={x:a.geometry.x+a.geometry.width/2,y:a.geometry.y+a.geometry.height/2};for(let e of b)this.isPointNearLine(d,e)&&this.validateLineTypeForInstrument(a.instrumentType,e.type)&&c.push(e);return c}findConnectedEquipment(a,b,c){let d=[];for(let c of b)this.calculateDistance({x:a.geometry.x+a.geometry.width/2,y:a.geometry.y+a.geometry.height/2},{x:c.geometry.x+c.geometry.width/2,y:c.geometry.y+c.geometry.height/2})<=this.proximityThreshold&&d.push(c);for(let a of c)for(let c of b)this.isEquipmentConnectedToLine(c,a)&&!d.includes(c)&&d.push(c);return d}validateInstrumentTypeMatch(a,b){if(0===b.length)return{valid:!1,reason:"Instrument not connected to any equipment",suggestedFix:"Ensure instrument has proper process connection"};let c={pressure:["pump","vessel","valve","equipment"],temperature:["vessel","exchanger","equipment"],flow:["pump","valve","equipment"],level:["vessel","equipment"],control:["pump","valve","equipment"],safety:["vessel","valve","equipment"]}[a.instrumentType]||[];for(let a of b)if(c.includes(a.type))return{valid:!0,reason:"",suggestedFix:""};let d=b.map(a=>a.type).join(", ");return{valid:!1,reason:`${a.instrumentType} instrument connected to incompatible equipment: ${d}`,suggestedFix:`Connect ${a.instrumentType} instrument to: ${c.join(", ")}`}}validateConnectionTopology(a,b){let c=this.getRequiredConnectionsForInstrument(a.instrumentType);if(b.length<c.minProcessLines)return{valid:!1,reason:`Insufficient process connections: found ${b.length}, required ${c.minProcessLines}`,suggestedFix:"Add missing process line connections"};let d=[...new Set(b.map(a=>a.type))];return d.length>c.maxProcessLineTypes?{valid:!1,reason:`Too many different line types connected: ${d.join(", ")}`,suggestedFix:"Review process connections - instrument should connect to consistent line types"}:{valid:!0,reason:"",suggestedFix:""}}validateFlowDirection(a,b){for(let c of b){let b=this.findConnectionPointOnLine(a,c);if(b){let c=this.getExpectedFlowDirection(a.instrumentType),d=b.direction||0,e=Math.abs(c-d);if(Math.min(e,360-e)>this.flowDirectionTolerance)return{valid:!1,reason:`Flow direction mismatch: expected ${c}\xb0, found ${d}\xb0`,suggestedFix:"Verify flow arrows and instrument tap orientation"}}}return{valid:!0,reason:"",suggestedFix:""}}checkMissingConnections(a){let b=[],c=this.getRequiredConnectionsForInstrument(a.instrumentType);return c.requiresSignal&&0===a.detectedConnections.signalLines.length&&b.push({type:"signal",required:!0,description:"Missing required signal connection to control system",suggestedFix:"Add signal line connection from instrument to control panel/DCS"}),c.requiresPower&&0===a.detectedConnections.powerLines.length&&b.push({type:"power",required:c.powerRequired,description:"Missing power connection",suggestedFix:"Add power supply connection for instrument operation"}),b}isPointNearLine(a,b){for(let c=0;c<b.geometry.points.length-1;c++){let d=b.geometry.points[c],e=b.geometry.points[c+1];if(this.pointToLineDistance(a,d,e)<=this.connectionTolerance+b.geometry.width/2)return!0}return!1}validateLineTypeForInstrument(a,b){return({pressure:["pipe"],temperature:["pipe"],flow:["pipe"],level:["pipe"],control:["pipe","signal","pneumatic"],safety:["pipe"]})[a]?.includes(b)||!1}isEquipmentConnectedToLine(a,b){for(let c of a.connectionPoints)if(this.isPointNearLine(c,b))return!0;return!1}getRequiredConnectionsForInstrument(a){let b={pressure:{minProcessLines:1,maxProcessLineTypes:1,requiresSignal:!0,requiresPower:!0,powerRequired:!0},temperature:{minProcessLines:1,maxProcessLineTypes:1,requiresSignal:!0,requiresPower:!0,powerRequired:!0},flow:{minProcessLines:1,maxProcessLineTypes:1,requiresSignal:!0,requiresPower:!0,powerRequired:!0},level:{minProcessLines:1,maxProcessLineTypes:1,requiresSignal:!0,requiresPower:!0,powerRequired:!0},control:{minProcessLines:1,maxProcessLineTypes:2,requiresSignal:!0,requiresPower:!0,powerRequired:!0},safety:{minProcessLines:1,maxProcessLineTypes:1,requiresSignal:!1,requiresPower:!1,powerRequired:!1}};return b[a]||b.pressure}getExpectedFlowDirection(a){return({pressure:90,temperature:0,flow:0,level:270,control:90,safety:90})[a]||0}findConnectionPointOnLine(a,b){let c={x:a.geometry.x+a.geometry.width/2,y:a.geometry.y+a.geometry.height/2};for(let a of b.connections)if(this.calculateDistance(c,a)<=this.connectionTolerance)return a;return null}calculateMappingConfidence(a,b,c){let d;return d=.5+.3*Math.max(0,1-this.calculateDistance({x:a.geometry.x+a.geometry.width/2,y:a.geometry.y+a.geometry.height/2},{x:b.geometry.x+b.geometry.width/2,y:b.geometry.y+b.geometry.height/2})/this.proximityThreshold),this.validateInstrumentTypeMatch(a,[b]).valid&&(d+=.3),c.length>0&&(d+=.2),Math.min(1,d)}calculateLineConnectionConfidence(a,b){let c=.6;this.validateLineTypeForInstrument(a.instrumentType,b.type)&&(c+=.3);let d={x:a.geometry.x+a.geometry.width/2,y:a.geometry.y+a.geometry.height/2};return this.isPointNearLine(d,b)&&(c+=.1),Math.min(1,c)}calculateDistance(a,b){return Math.sqrt(Math.pow(a.x-b.x,2)+Math.pow(a.y-b.y,2))}pointToLineDistance(a,b,c){let d=a.x-b.x,e=a.y-b.y,f=c.x-b.x,g=c.y-b.y,h=f*f+g*g;if(0===h)return Math.sqrt(d*d+e*e);let i=(d*f+e*g)/h;if(i<0)return Math.sqrt(d*d+e*e);if(i>1){let b=a.x-c.x,d=a.y-c.y;return Math.sqrt(b*b+d*d)}{let c=b.x+i*f,d=b.y+i*g,e=a.x-c,h=a.y-d;return Math.sqrt(e*e+h*h)}}generateMappingReport(a){let b=a.filter(a=>a.isValid).length,c=a.length-b,d=a.reduce((a,b)=>a+b.confidence,0)/a.length,e="# Instrument-to-Equipment Mapping Validation Report\n\n";if(e+=`## Summary
- Total Instruments: ${a.length}
- Valid Mappings: ${b}
- Invalid Mappings: ${c}
- Average Confidence: ${(100*d).toFixed(1)}%

`,c>0)for(let b of(e+=`## Invalid Mappings (${c})
`,a.filter(a=>!a.isValid))){for(let a of(e+=`### Instrument ${b.instrumentId}
- Confidence: ${(100*b.confidence).toFixed(1)}%
- Issues:
`,b.issues))e+=`  - ${a.description} (${a.severity})
    Suggested fix: ${a.suggestedFix}
`;for(let a of(e+=`- Recommendations:
`,b.recommendations))e+=`  - ${a}
`;e+="\n"}e+=`## Overall Recommendations
`;let f=a.flatMap(a=>a.issues).filter(a=>"high"===a.severity);f.length>0&&(e+=`- 🚨 ${f.length} high-severity mapping issues require immediate attention
`);let g=a.flatMap(a=>a.issues).filter(a=>"wrong_equipment"===a.type);g.length>0&&(e+=`- 🔧 ${g.length} instruments connected to wrong equipment
`);let h=a.flatMap(a=>a.issues).filter(a=>"missing_connection"===a.type);return h.length>0&&(e+=`- ⚡ ${h.length} instruments missing required connections
`),d>.9?e+=`- ✅ High overall confidence - mappings appear accurate
`:d<.7&&(e+=`- ⚠️ Low overall confidence - review mapping algorithm
`),e}constructor(){this.proximityThreshold=75,this.connectionTolerance=15,this.flowDirectionTolerance=30}}class z{constructor(){this.materialDatabase={materials:[],ratings:[]},this.layerConventions=[],this.proximityThreshold=50,this.fragmentMergeThreshold=20,this.initializeMaterialDatabase(),this.initializeLayerConventions()}validateMaterialRatings(a,b){console.log("\uD83E\uDDEA Starting material/pressure rating validation..."),this.updateLayerConventions(b);let c=this.assembleTextFragments(a),d=[];for(let a of c){let b=this.parseSpecification(a);b&&d.push(b)}return this.crossValidateWithLayers(d),this.validateAgainstDatabase(d),console.log(`✅ Validated ${d.length} material/rating specifications`),d}assembleTextFragments(a){let b=[],c=new Set;for(let d of a){if(c.has(d.id))continue;let e=this.findRelatedFragments(d,a,c);if(e.length>0){e.sort((a,b)=>{let c=a.geometry.y-b.geometry.y;return 10>Math.abs(c)?a.geometry.x-b.geometry.x:c});let a=this.combineFragmentText(e),f=this.calculateBoundingGeometry(e);b.push({id:`spec-${b.length+1}`,fragments:e,combinedText:a,geometry:f,layer:d.layer}),e.forEach(a=>c.add(a.id))}}return b}findRelatedFragments(a,b,c){let d=[a];for(let e of b){if(e.id===a.id||c.has(e.id))continue;let b=this.calculateDistance({x:a.geometry.x+a.geometry.width/2,y:a.geometry.y+a.geometry.height/2},{x:e.geometry.x+e.geometry.width/2,y:e.geometry.y+e.geometry.height/2}),f=e.layer===a.layer,g=this.isSpecificationRelevantText(e.text);b<=this.proximityThreshold&&f&&g&&d.push(e)}return d}combineFragmentText(a){if(0===a.length)return"";if(1===a.length)return a[0].text.trim();let b=a[0].text.trim();for(let c=1;c<a.length;c++){let d=a[c-1],e=a[c],f=e.geometry.x-(d.geometry.x+d.geometry.width),g=Math.abs(e.geometry.y-d.geometry.y),h="";b+=(h=g>5||f>10?" ":"")+e.text.trim()}return b}parseSpecification(a){let b,c=a.combinedText,d=[],e=[],f=this.parseSpecificationText(c);if(!f.size&&!f.material&&!f.rating)return null;let g=this.validateComponents(f,a.layer);d.push(...g.issues),e.push(...g.suggestions),b=.5+.3*(a.fragments.reduce((a,b)=>a+b.confidence,0)/a.fragments.length)+Object.values(f).filter(a=>void 0!==a).length/4*.4;let h=this.validateLayerConsistency(f,a.layer);h.valid?b+=.2:d.push({type:"layer_inconsistency",severity:"medium",description:h.reason,suggestedFix:h.suggestedFix,affectedFragments:a.fragments.map(a=>a.id)});let i=d.filter(a=>"high"===a.severity).length;return b=Math.max(.1,b-.3*i-.1*d.filter(a=>"medium"===a.severity).length),{id:a.id,geometry:a.geometry,extractedText:c,normalizedSpec:f,confidence:b,sources:a.fragments,layer:a.layer,validation:{isValid:b>.6&&0===i,issues:d,suggestions:e}}}parseSpecificationText(a){let b={additional:[]},c=a.toUpperCase().replace(/\s+/g," ").trim(),d=c.match(/(\d+(?:\.\d+)?)["\s]*(?:-|$)/);for(let a of(d&&(b.size=d[1]+'"'),[/\b(CS|CARBON\s*STEEL)\b/,/\b(SS|STAINLESS\s*STEEL|SS\d{3})\b/,/\b(A\d{3}[A-Z]?)\b/,/\b(316L?|304L?|321|347)\b/,/\b(INCONEL|MONEL|HASTELLOY)\b/])){let d=c.match(a);if(d){b.material=this.normalizeMaterial(d[1]);break}}for(let a of[/\b(\d{3})\s*(?:LB|#|PSI)?\b/,/\b(ANSI\s*)?(\d{3})(?:\s*LB)?\b/,/\b(\d+)\s*PSI(?:G)?\b/]){let d=c.match(a);if(d){let a=d[2]||d[1];b.rating=this.normalizeRating(a);break}}let e=c.match(/\b(SCH\s*\d+|XS|XXS|STD)\b/);for(let a of(e&&(b.schedule=e[1].replace(/\s+/g,"")),[/\b(SEAMLESS|WELDED)\b/,/\b(ANSI\s*B\d+\.\d+)\b/,/\b(ASTM\s*[A-Z]\d+)\b/])){let d=c.match(a);d&&b.additional.push(d[1])}return b}normalizeMaterial(a){let b=a.toUpperCase().replace(/\s+/g,"");return({CARBONSTEEL:"CS",STAINLESSSTEEL:"SS",SS304:"SS304",SS316:"SS316","304L":"SS304L","316L":"SS316L",321:"SS321",347:"SS347"})[b]||b}normalizeRating(a){let b=parseInt(a),c=[150,300,600,900,1500,2500].reduce((a,c)=>Math.abs(c-b)<Math.abs(a-b)?c:a);return 25>=Math.abs(b-c)?`${c}`:a}validateComponents(a,b){let c=[];if(a.material){let b=this.validateMaterial(a.material);b.valid||c.push({type:"material_mismatch",severity:"high",description:`Unknown or invalid material: ${a.material}`,suggestedFix:`Use standard material code. Suggestions: ${b.suggestions.join(", ")}`,affectedFragments:[]})}if(a.rating){let b=this.validateRating(a.rating);b.valid||c.push({type:"rating_invalid",severity:"high",description:`Invalid pressure rating: ${a.rating}`,suggestedFix:`Use standard ANSI rating. Suggestions: ${b.suggestions.join(", ")}`,affectedFragments:[]})}if(a.material&&a.rating){let b=this.validateMaterialRatingCompatibility(a.material,a.rating);b.valid||c.push({type:"material_mismatch",severity:"medium",description:b.reason,suggestedFix:b.suggestedFix,affectedFragments:[]})}return{issues:c,suggestions:[]}}validateMaterial(a){let b=a.toUpperCase();for(let a of this.materialDatabase.materials)if(a.code===b||a.aliases.includes(b))return{valid:!0,suggestions:[]};return{valid:!1,suggestions:this.materialDatabase.materials.filter(a=>a.code.includes(b.substring(0,2))).map(a=>a.code).slice(0,3)}}validateRating(a){let b=parseInt(a);for(let c of this.materialDatabase.ratings)if(c.code===a||c.pressure===b)return{valid:!0,suggestions:[]};return{valid:!1,suggestions:this.materialDatabase.ratings.sort((a,c)=>Math.abs(a.pressure-b)-Math.abs(c.pressure-b)).slice(0,3).map(a=>a.code)}}validateMaterialRatingCompatibility(a,b){let c=this.materialDatabase.materials.find(b=>b.code===a||b.aliases.includes(a));return c?c.compatibleRatings.includes(b)?{valid:!0,reason:"",suggestedFix:""}:{valid:!1,reason:`Material ${a} typically not used with ${b} rating`,suggestedFix:`Consider using ratings: ${c.compatibleRatings.join(", ")}`}:{valid:!0,reason:"",suggestedFix:""}}validateLayerConsistency(a,b){let c=this.layerConventions.find(a=>a.name.toLowerCase()===b.toLowerCase());return c?c.defaultMaterial&&a.material&&c.defaultMaterial!==a.material?{valid:!1,reason:`Material ${a.material} inconsistent with layer ${b} default (${c.defaultMaterial})`,suggestedFix:"Verify material or check if specification should be on different layer"}:c.defaultRating&&a.rating&&c.defaultRating!==a.rating?{valid:!1,reason:`Rating ${a.rating} inconsistent with layer ${b} default (${c.defaultRating})`,suggestedFix:"Verify rating or check if specification should be on different layer"}:{valid:!0,reason:"",suggestedFix:""}:{valid:!0,reason:"",suggestedFix:""}}crossValidateWithLayers(a){for(let b of a){let a=this.layerConventions.find(a=>a.name.toLowerCase()===b.layer.toLowerCase());a&&(!b.normalizedSpec.material&&a.defaultMaterial&&(b.normalizedSpec.material=a.defaultMaterial,b.validation.suggestions.push(`Inferred material ${a.defaultMaterial} from layer ${b.layer}`)),!b.normalizedSpec.rating&&a.defaultRating&&(b.normalizedSpec.rating=a.defaultRating,b.validation.suggestions.push(`Inferred rating ${a.defaultRating} from layer ${b.layer}`)))}}validateAgainstDatabase(a){for(let b of a);}isSpecificationRelevantText(a){return[/\d+["\s]*-/,/\b(CS|SS|STAINLESS|CARBON)\b/i,/\b\d{3}(?:\s*LB)?\b/,/\b(SCH|ANSI|ASTM)\b/i].some(b=>b.test(a))}calculateBoundingGeometry(a){if(0===a.length)return{x:0,y:0,width:0,height:0};let b=Math.min(...a.map(a=>a.geometry.x)),c=Math.min(...a.map(a=>a.geometry.y));return{x:b,y:c,width:Math.max(...a.map(a=>a.geometry.x+a.geometry.width))-b,height:Math.max(...a.map(a=>a.geometry.y+a.geometry.height))-c}}calculateDistance(a,b){return Math.sqrt(Math.pow(a.x-b.x,2)+Math.pow(a.y-b.y,2))}updateLayerConventions(a){for(let b of a){let a=this.layerConventions.findIndex(a=>a.name.toLowerCase()===b.name.toLowerCase());a>=0?this.layerConventions[a]={...this.layerConventions[a],...b}:this.layerConventions.push(b)}}initializeMaterialDatabase(){this.materialDatabase={materials:[{code:"CS",fullName:"Carbon Steel",aliases:["CARBON STEEL","A106","A53"],compatibleRatings:["150","300","600","900","1500"],temperatureRange:{min:-20,max:400},properties:{density:7.85,strength:"medium"}},{code:"SS304",fullName:"Stainless Steel 304",aliases:["304","304L","SS","STAINLESS STEEL"],compatibleRatings:["150","300","600","900","1500","2500"],temperatureRange:{min:-196,max:800},properties:{density:8,strength:"high",corrosionResistance:"excellent"}},{code:"SS316",fullName:"Stainless Steel 316",aliases:["316","316L"],compatibleRatings:["150","300","600","900","1500","2500"],temperatureRange:{min:-196,max:800},properties:{density:8,strength:"high",corrosionResistance:"superior"}}],ratings:[{code:"150",description:"ANSI 150",pressure:150,temperature:400,standard:"ANSI B16.5"},{code:"300",description:"ANSI 300",pressure:300,temperature:400,standard:"ANSI B16.5"},{code:"600",description:"ANSI 600",pressure:600,temperature:400,standard:"ANSI B16.5"},{code:"900",description:"ANSI 900",pressure:900,temperature:400,standard:"ANSI B16.5"},{code:"1500",description:"ANSI 1500",pressure:1500,temperature:400,standard:"ANSI B16.5"},{code:"2500",description:"ANSI 2500",pressure:2500,temperature:400,standard:"ANSI B16.5"}]}}initializeLayerConventions(){this.layerConventions=[{name:"PIPING",type:"piping",conventions:{separators:["-"," ","/"]}},{name:"PROCESS",type:"piping",conventions:{separators:["-"," "]}},{name:"EQUIPMENT",type:"equipment",conventions:{separators:["-"," "]}},{name:"NOTES",type:"notes",conventions:{separators:[" ",","]}}]}generateValidationReport(a){let b=a.filter(a=>a.validation.isValid).length,c=a.length-b,d=a.reduce((a,b)=>a+b.confidence,0)/a.length,e="# Material/Pressure Rating Validation Report\n\n";if(e+=`## Summary
- Total Specifications: ${a.length}
- Valid Specifications: ${b}
- Invalid Specifications: ${c}
- Average Confidence: ${(100*d).toFixed(1)}%

`,c>0)for(let b of(e+=`## Invalid Specifications (${c})
`,a.filter(a=>!a.validation.isValid))){for(let a of(e+=`### ${b.id}
- Extracted Text: "${b.extractedText}"
- Confidence: ${(100*b.confidence).toFixed(1)}%
- Layer: ${b.layer}
`,b.normalizedSpec.size&&(e+=`- Size: ${b.normalizedSpec.size}
`),b.normalizedSpec.material&&(e+=`- Material: ${b.normalizedSpec.material}
`),b.normalizedSpec.rating&&(e+=`- Rating: ${b.normalizedSpec.rating}
`),e+=`- Issues:
`,b.validation.issues))e+=`  - ${a.description} (${a.severity})
    Fix: ${a.suggestedFix}
`;if(b.validation.suggestions.length>0)for(let a of(e+=`- Suggestions:
`,b.validation.suggestions))e+=`  - ${a}
`;e+="\n"}let f=a.flatMap(a=>a.validation.issues).filter(a=>"fragmented_text"===a.type),g=a.flatMap(a=>a.validation.issues).filter(a=>"material_mismatch"===a.type),h=a.flatMap(a=>a.validation.issues).filter(a=>"rating_invalid"===a.type);return e+=`## Overall Recommendations
`,f.length>0&&(e+=`- 📝 ${f.length} specifications have fragmented text - improve OCR text assembly
`),g.length>0&&(e+=`- 🔧 ${g.length} material specification issues - review material database and parsing rules
`),h.length>0&&(e+=`- ⚡ ${h.length} pressure rating issues - validate against standard ANSI ratings
`),d>.8?e+=`- ✅ High overall confidence - material/rating extraction appears accurate
`:d<.6&&(e+=`- ⚠️ Low overall confidence - review extraction and validation algorithms
`),e}}class A{constructor(a={}){this.tagParser=new v,this.missingEquipmentDetector=new w,this.falsePositiveValidator=new x,this.config={dwgToExtractedThreshold:2,confidenceThreshold:90,sampleSize:50,visualDiffEnabled:!0,...a}}async runTestSuite(a,b){let c,d=new Date().toISOString();console.log("\uD83E\uDDEA Starting automated test suite..."),console.log("\uD83D\uDCCA Running DWG vs Extracted tag comparison...");let e=await this.generateDWGExtractionDiff(a,b);console.log("\uD83C\uDFAF Analyzing confidence calibration...");let f=await this.analyzeConfidenceCalibration(b);this.config.visualDiffEnabled?(console.log("\uD83D\uDC41️  Generating visual diff report..."),c=await this.generateVisualDiff(a,b)):c={items:[],summary:{totalItems:0,matches:0,missingInExtracted:0,missingInDWG:0,mismatches:0}};let g=this.calculateOverallScore(e,f),h=this.generateRecommendations(e,f,c);return console.log("✅ Test suite completed"),{timestamp:d,config:this.config,dwgExtractionDiff:e,confidenceCalibration:f,visualDiff:c,overallScore:g,recommendations:h}}async generateDWGExtractionDiff(a,b){let c=a.filter(a=>a.text||a.name).map(a=>a.text||a.name||"").filter(a=>{let b=this.tagParser.parseTag(a);return"unknown"!==b.category&&b.confidence>.3}).map(a=>this.tagParser.parseTag(a).normalizedTag),d=b.map(a=>a.tag),e=[],f=new Set,g=new Set;for(let a of c){if(f.has(a))continue;let b=null;for(let c of d){if(g.has(c))continue;let d=this.calculateStringSimilarity(a,c);d>.8&&(!b||d>b.similarity)&&(b={extracted:c,similarity:d})}b&&(e.push({dwg:a,extracted:b.extracted,similarity:b.similarity}),f.add(a),g.add(b.extracted))}let h=c.filter(a=>!f.has(a)),i=d.filter(a=>!g.has(a)),j=c.length>0?(h.length+i.length)/c.length*100:0,k=j<=this.config.dwgToExtractedThreshold;return{dwgTags:c,extractedTags:d,missing:h,extra:i,matched:e,discrepancyPercentage:j,testPassed:k}}async analyzeConfidenceCalibration(a){let b=[];for(let c of a){let a=this.tagParser.parseTag(c.tag),d=[];a.issues.length>0&&d.push(...a.issues),(c.geometry.width<5||c.geometry.height<5)&&d.push("Suspiciously small text geometry"),"unknown"===a.category&&d.push("Tag does not match known patterns");let e=0===d.length||!d.some(a=>a.includes("OCR error")||a.includes("unknown"));b.push({tag:c.tag,confidence:100*c.confidence,actualValidity:e,ruleViolations:d,geometry:c.geometry})}let c=b.filter(a=>a.confidence>=this.config.confidenceThreshold&&!a.actualValidity),d=b.filter(a=>a.confidence<this.config.confidenceThreshold&&a.actualValidity),e=this.calculateCalibrationScore(b);return{items:b,overconfidentCount:c.length,underconfidentCount:d.length,calibrationScore:e}}async generateVisualDiff(a,b){let c=[];for(let d of a){let a=d.text||d.name||"";if(!a)continue;let e=b.find(b=>this.calculateStringSimilarity(a,b.tag)>.8);if(e){let a=this.calculateSpatialDistance(d.geometry,e.geometry),b=a<50?"match":"mismatch";c.push({id:`dwg-${d.id}`,type:"block"===d.type?"symbol":"tag",dwgGeometry:{x:d.geometry.x,y:d.geometry.y,width:d.geometry.width||0,height:d.geometry.height||0},extractedGeometry:e.geometry,status:b,confidence:e.confidence,notes:"mismatch"===b?[`Spatial distance: ${a.toFixed(1)}px`]:["Positions match well"]})}else c.push({id:`missing-${d.id}`,type:"block"===d.type?"symbol":"tag",dwgGeometry:{x:d.geometry.x,y:d.geometry.y,width:d.geometry.width||0,height:d.geometry.height||0},status:"missing_in_extracted",notes:[`Tag "${a}" found in DWG but not extracted`]})}for(let d of b)a.some(a=>{let b=a.text||a.name||"";return this.calculateStringSimilarity(b,d.tag)>.8})||c.push({id:`extra-${d.tag}`,type:"false_positive",extractedGeometry:d.geometry,status:"missing_in_dwg",confidence:d.confidence,notes:[`Tag "${d.tag}" extracted but not found in DWG`]});let d={totalItems:c.length,matches:c.filter(a=>"match"===a.status).length,missingInExtracted:c.filter(a=>"missing_in_extracted"===a.status).length,missingInDWG:c.filter(a=>"missing_in_dwg"===a.status).length,mismatches:c.filter(a=>"mismatch"===a.status).length};return{items:c,summary:d}}calculateOverallScore(a,b){let c=a.testPassed?Math.max(0,1-a.discrepancyPercentage/100):0,d=b.calibrationScore;return Math.round(100*(.4*c+.3*d+(b.items.length>0?1-b.overconfidentCount/b.items.length:1)*.3))}generateRecommendations(a,b,c){let d=[];return a.testPassed?d.push(`✅ DWG extraction test PASSED`):(d.push(`❌ DWG extraction test FAILED: ${a.discrepancyPercentage.toFixed(1)}% discrepancy (threshold: ${this.config.dwgToExtractedThreshold}%)`),a.missing.length>0&&d.push(`🔍 ${a.missing.length} tags missing from extraction. Consider multi-pass OCR or reviewing layer visibility.`),a.extra.length>0&&d.push(`⚠️  ${a.extra.length} extra tags found in extraction. Review false positive detection and OCR noise filtering.`)),b.overconfidentCount>0&&d.push(`📊 ${b.overconfidentCount} overconfident predictions detected. Consider recalibrating confidence estimator.`),b.calibrationScore<.8&&d.push(`🎯 Confidence calibration score: ${(100*b.calibrationScore).toFixed(1)}%. Review confidence calculation algorithm.`),c.summary.mismatches>0&&d.push(`📍 ${c.summary.mismatches} spatial position mismatches detected. Review coordinate system calibration.`),0===d.length&&d.push("\uD83C\uDF89 All tests passed! System is performing well."),d}calculateStringSimilarity(a,b){let c=a.length,d=b.length;if(0===c||0===d)return 0;if(a===b)return 1;let e=Array(c+1).fill(null).map(()=>Array(d+1).fill(null));for(let a=0;a<=c;a++)e[a][0]=a;for(let a=0;a<=d;a++)e[0][a]=a;for(let f=1;f<=c;f++)for(let c=1;c<=d;c++){let d=+(a[f-1]!==b[c-1]);e[f][c]=Math.min(e[f-1][c]+1,e[f][c-1]+1,e[f-1][c-1]+d)}let f=Math.max(c,d);return(f-e[c][d])/f}calculateSpatialDistance(a,b){let c={x:a.x+(a.width||0)/2,y:a.y+(a.height||0)/2},d={x:b.x+b.width/2,y:b.y+b.height/2};return Math.sqrt(Math.pow(c.x-d.x,2)+Math.pow(c.y-d.y,2))}calculateCalibrationScore(a){if(0===a.length)return 1;let b={};for(let c of a){let a=10*Math.floor(c.confidence/10);b[a]||(b[a]={correct:0,total:0}),b[a].total++,c.actualValidity&&b[a].correct++}let c=0,d=a.length;for(let[a,e]of Object.entries(b)){let b=parseInt(a)+5,f=e.correct/e.total;c+=e.total/d*Math.abs(b/100-f)}return Math.max(0,1-c)}exportTestReport(a){let b=`# Automated Test Report
`;return b+=`**Generated:** ${new Date(a.timestamp).toLocaleString()}
**Overall Score:** ${a.overallScore}% 🎯

## Configuration
- DWG-to-Extracted Threshold: ${a.config.dwgToExtractedThreshold}%
- Confidence Threshold: ${a.config.confidenceThreshold}%
- Sample Size: ${a.config.sampleSize}
- Visual Diff Enabled: ${a.config.visualDiffEnabled}

## DWG vs Extracted Comparison
- **Test Status:** ${a.dwgExtractionDiff.testPassed?"✅ PASSED":"❌ FAILED"}
- **Discrepancy:** ${a.dwgExtractionDiff.discrepancyPercentage.toFixed(1)}%
- **DWG Tags:** ${a.dwgExtractionDiff.dwgTags.length}
- **Extracted Tags:** ${a.dwgExtractionDiff.extractedTags.length}
- **Missing from Extraction:** ${a.dwgExtractionDiff.missing.length}
- **Extra in Extraction:** ${a.dwgExtractionDiff.extra.length}
- **Successful Matches:** ${a.dwgExtractionDiff.matched.length}

`,a.dwgExtractionDiff.missing.length>0&&(b+=`### Missing Tags
`,a.dwgExtractionDiff.missing.slice(0,10).forEach(a=>{b+=`- ${a}
`}),a.dwgExtractionDiff.missing.length>10&&(b+=`- ... and ${a.dwgExtractionDiff.missing.length-10} more
`),b+="\n"),b+=`## Confidence Calibration
- **Calibration Score:** ${(100*a.confidenceCalibration.calibrationScore).toFixed(1)}%
- **Overconfident Items:** ${a.confidenceCalibration.overconfidentCount}
- **Underconfident Items:** ${a.confidenceCalibration.underconfidentCount}
- **Total Analyzed:** ${a.confidenceCalibration.items.length}

## Visual Diff Summary
- **Total Items:** ${a.visualDiff.summary.totalItems}
- **Matches:** ${a.visualDiff.summary.matches}
- **Missing in Extracted:** ${a.visualDiff.summary.missingInExtracted}
- **Missing in DWG:** ${a.visualDiff.summary.missingInDWG}
- **Position Mismatches:** ${a.visualDiff.summary.mismatches}

## Recommendations
`,a.recommendations.forEach(a=>{b+=`- ${a}
`}),b}}async function B(a){try{console.log("\uD83D\uDD27 Starting CAD validation pipeline...");let{dwgEntities:b,extractedTags:c,detectedSymbols:d,instrumentConnections:e,equipmentItems:f,processLines:g,textFragments:h,layerMetadata:i,runTests:j=!1}=await a.json();if(!b||!c)return u.NextResponse.json({error:"Missing required fields: dwgEntities and extractedTags"},{status:400});let k={timestamp:new Date().toISOString(),validationResults:{},testResults:null,summary:{},recommendations:[]};console.log("\uD83D\uDCDD Parsing and normalizing tags...");let l=new v,m=l.parseTagsBatch(c.map(a=>a.tag)),n=l.getValidationStats(m);console.log(`✅ Parsed ${m.length} tags with ${n.validTags} valid tags`),console.log("\uD83D\uDD0D Running missing equipment detection...");let o=new w().detectMissingEquipment(b,c);console.log(`📊 Found ${o.analysis.missingTags.length} missing tags and ${o.analysis.falsePositives.length} false positives`);let p=null;d&&d.length>0&&(console.log("\uD83D\uDEAB Running false positive validation..."),p=new x().validateExtraction(d,c),console.log(`✅ Validated ${p.length} items`));let q=null;e&&f&&g&&(console.log("\uD83D\uDD17 Running instrument-to-equipment mapping validation..."),q=new y().validateInstrumentMappings(e,f,g),console.log(`✅ Validated ${q.length} instrument mappings`));let r=null;h&&h.length>0&&(console.log("\uD83E\uDDEA Running material/pressure rating validation..."),r=new z().validateMaterialRatings(h,i||[]),console.log(`✅ Validated ${r.length} material specifications`));let s=null;if(j){console.log("\uD83E\uDDEA Running automated test suite...");let a=new A({dwgToExtractedThreshold:2,confidenceThreshold:90,visualDiffEnabled:!0});s=await a.runTestSuite(b,c),console.log(`🎯 Test suite completed with overall score: ${s.overallScore}%`)}k.validationResults={tagParsing:{stats:n,issues:m.filter(a=>a.issues.length>0).map(a=>({tag:a.originalTag,normalizedTag:a.normalizedTag,confidence:a.confidence,category:a.category,issues:a.issues}))},missingEquipment:{analysis:o.analysis,confidence:o.analysis.confidence,recommendations:o.analysis.recommendations},falsePositives:p?{validCount:p.filter(a=>a.isValid).length,invalidCount:p.filter(a=>!a.isValid).length,issues:p.filter(a=>!a.isValid).map(a=>({item:"template"in a.item?`${a.item.template.name}`:a.item.tag,confidence:a.confidence,issues:a.issues,recommendations:a.recommendations}))}:null,instrumentMapping:q?{validCount:q.filter(a=>a.isValid).length,invalidCount:q.filter(a=>!a.isValid).length,averageConfidence:q.reduce((a,b)=>a+b.confidence,0)/q.length,issues:q.filter(a=>!a.isValid).map(a=>({instrumentId:a.instrumentId,confidence:a.confidence,issues:a.issues,recommendations:a.recommendations}))}:null,materialRating:r?{validCount:r.filter(a=>a.validation.isValid).length,invalidCount:r.filter(a=>!a.validation.isValid).length,averageConfidence:r.reduce((a,b)=>a+b.confidence,0)/r.length,issues:r.filter(a=>!a.validation.isValid).map(a=>({specId:a.id,extractedText:a.extractedText,confidence:a.confidence,issues:a.validation.issues,suggestions:a.validation.suggestions}))}:null},k.testResults=s;let t=[n.validTags/n.totalTags*.25,.25*o.analysis.confidence,(p?.filter(a=>a.isValid).length||0)/Math.max(p?.length||1,1)*.2,(q?.filter(a=>a.isValid).length||0)/Math.max(q?.length||1,1)*.15,(r?.filter(a=>a.validation.isValid).length||0)/Math.max(r?.length||1,1)*.15].reduce((a,b)=>a+b,0);k.summary={totalTags:n.totalTags,validTags:n.validTags,missingTags:o.analysis.missingTags.length,falsePositives:o.analysis.falsePositives.length,instrumentMappings:q?.length||0,validInstrumentMappings:q?.filter(a=>a.isValid).length||0,materialSpecs:r?.length||0,validMaterialSpecs:r?.filter(a=>a.validation.isValid).length||0,overallConfidence:Math.round(100*t),testScore:s?.overallScore||null};let B=[...o.analysis.recommendations];if(p){let a=p.filter(a=>!a.isValid).flatMap(a=>a.recommendations);B.push(...a)}if(s&&B.push(...s.recommendations),q){let a=q.filter(a=>!a.isValid).flatMap(a=>a.recommendations);B.push(...a)}if(r){let a=r.filter(a=>!a.validation.isValid).flatMap(a=>a.validation.suggestions);B.push(...a)}if(n.invalidTags>.1*n.totalTags&&B.unshift("\uD83D\uDEA8 HIGH PRIORITY: >10% of tags are invalid - review OCR accuracy"),o.analysis.confidence<.8&&B.unshift("⚠️ MEDIUM PRIORITY: Low equipment detection confidence - consider manual review"),q&&q.filter(a=>!a.isValid).length>0){let a=q.filter(a=>!a.isValid).length,b=q.length;a/b>.2&&B.unshift(`🚨 HIGH PRIORITY: ${a}/${b} instrument mappings invalid - review connection topology`)}if(r&&r.filter(a=>!a.validation.isValid).length>0){let a=r.filter(a=>!a.validation.isValid).length,b=r.length;a/b>.3&&B.unshift(`⚠️ MEDIUM PRIORITY: ${a}/${b} material specifications invalid - improve text assembly`)}return k.recommendations=[...new Set(B)],console.log("✅ CAD validation pipeline completed successfully"),u.NextResponse.json(k,{status:200})}catch(a){return console.error("❌ Error in validation pipeline:",a),u.NextResponse.json({error:"Internal server error during validation",details:a instanceof Error?a.message:String(a)},{status:500})}}async function C(){try{let a=new v().parseTag("P-101A"),b={status:"healthy",timestamp:new Date().toISOString(),services:{tagParser:a.confidence>.8?"operational":"degraded",missingDetector:"operational",falsePositiveValidator:"operational",testingFramework:"operational"},version:"1.0.0"};return u.NextResponse.json(b,{status:200})}catch(a){return u.NextResponse.json({status:"unhealthy",error:a instanceof Error?a.message:String(a),timestamp:new Date().toISOString()},{status:503})}}let D=new e.AppRouteRouteModule({definition:{kind:f.RouteKind.APP_ROUTE,page:"/api/validation/route",pathname:"/api/validation",filename:"route",bundlePath:"app/api/validation/route"},distDir:".next",relativeProjectDir:"",resolvedPagePath:"C:\\Users\\Rohit Kumar\\Desktop\\cadly\\nextjs_frontend\\app\\api\\validation\\route.ts",nextConfigOutput:"",userland:d}),{workAsyncStorage:E,workUnitAsyncStorage:F,serverHooks:G}=D;function H(){return(0,g.patchFetch)({workAsyncStorage:E,workUnitAsyncStorage:F})}async function I(a,b,c){var d;let e="/api/validation/route";"/index"===e&&(e="/");let g=await D.prepare(a,b,{srcPage:e,multiZoneDraftMode:!1});if(!g)return b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve()),null;let{buildId:u,params:v,nextConfig:w,isDraftMode:x,prerenderManifest:y,routerServerContext:z,isOnDemandRevalidate:A,revalidateOnlyGenerated:B,resolvedPathname:C}=g,E=(0,j.normalizeAppPath)(e),F=!!(y.dynamicRoutes[E]||y.routes[C]);if(F&&!x){let a=!!y.routes[C],b=y.dynamicRoutes[E];if(b&&!1===b.fallback&&!a)throw new s.NoFallbackError}let G=null;!F||D.isDev||x||(G="/index"===(G=C)?"/":G);let H=!0===D.isDev||!F,I=F&&!H,J=a.method||"GET",K=(0,i.getTracer)(),L=K.getActiveScopeSpan(),M={params:v,prerenderManifest:y,renderOpts:{experimental:{cacheComponents:!!w.experimental.cacheComponents,authInterrupts:!!w.experimental.authInterrupts},supportsDynamicResponse:H,incrementalCache:(0,h.getRequestMeta)(a,"incrementalCache"),cacheLifeProfiles:null==(d=w.experimental)?void 0:d.cacheLife,isRevalidate:I,waitUntil:c.waitUntil,onClose:a=>{b.on("close",a)},onAfterTaskError:void 0,onInstrumentationRequestError:(b,c,d)=>D.onRequestError(a,b,d,z)},sharedContext:{buildId:u}},N=new k.NodeNextRequest(a),O=new k.NodeNextResponse(b),P=l.NextRequestAdapter.fromNodeNextRequest(N,(0,l.signalFromNodeResponse)(b));try{let d=async c=>D.handle(P,M).finally(()=>{if(!c)return;c.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let d=K.getRootSpanAttributes();if(!d)return;if(d.get("next.span_type")!==m.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${d.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let e=d.get("next.route");if(e){let a=`${J} ${e}`;c.setAttributes({"next.route":e,"http.route":e,"next.span_name":a}),c.updateName(a)}else c.updateName(`${J} ${a.url}`)}),g=async g=>{var i,j;let k=async({previousCacheEntry:f})=>{try{if(!(0,h.getRequestMeta)(a,"minimalMode")&&A&&B&&!f)return b.statusCode=404,b.setHeader("x-nextjs-cache","REVALIDATED"),b.end("This page could not be found"),null;let e=await d(g);a.fetchMetrics=M.renderOpts.fetchMetrics;let i=M.renderOpts.pendingWaitUntil;i&&c.waitUntil&&(c.waitUntil(i),i=void 0);let j=M.renderOpts.collectedTags;if(!F)return await (0,o.I)(N,O,e,M.renderOpts.pendingWaitUntil),null;{let a=await e.blob(),b=(0,p.toNodeOutgoingHttpHeaders)(e.headers);j&&(b[r.NEXT_CACHE_TAGS_HEADER]=j),!b["content-type"]&&a.type&&(b["content-type"]=a.type);let c=void 0!==M.renderOpts.collectedRevalidate&&!(M.renderOpts.collectedRevalidate>=r.INFINITE_CACHE)&&M.renderOpts.collectedRevalidate,d=void 0===M.renderOpts.collectedExpire||M.renderOpts.collectedExpire>=r.INFINITE_CACHE?void 0:M.renderOpts.collectedExpire;return{value:{kind:t.CachedRouteKind.APP_ROUTE,status:e.status,body:Buffer.from(await a.arrayBuffer()),headers:b},cacheControl:{revalidate:c,expire:d}}}}catch(b){throw(null==f?void 0:f.isStale)&&await D.onRequestError(a,b,{routerKind:"App Router",routePath:e,routeType:"route",revalidateReason:(0,n.c)({isRevalidate:I,isOnDemandRevalidate:A})},z),b}},l=await D.handleResponse({req:a,nextConfig:w,cacheKey:G,routeKind:f.RouteKind.APP_ROUTE,isFallback:!1,prerenderManifest:y,isRoutePPREnabled:!1,isOnDemandRevalidate:A,revalidateOnlyGenerated:B,responseGenerator:k,waitUntil:c.waitUntil});if(!F)return null;if((null==l||null==(i=l.value)?void 0:i.kind)!==t.CachedRouteKind.APP_ROUTE)throw Object.defineProperty(Error(`Invariant: app-route received invalid cache entry ${null==l||null==(j=l.value)?void 0:j.kind}`),"__NEXT_ERROR_CODE",{value:"E701",enumerable:!1,configurable:!0});(0,h.getRequestMeta)(a,"minimalMode")||b.setHeader("x-nextjs-cache",A?"REVALIDATED":l.isMiss?"MISS":l.isStale?"STALE":"HIT"),x&&b.setHeader("Cache-Control","private, no-cache, no-store, max-age=0, must-revalidate");let m=(0,p.fromNodeOutgoingHttpHeaders)(l.value.headers);return(0,h.getRequestMeta)(a,"minimalMode")&&F||m.delete(r.NEXT_CACHE_TAGS_HEADER),!l.cacheControl||b.getHeader("Cache-Control")||m.get("Cache-Control")||m.set("Cache-Control",(0,q.getCacheControlHeader)(l.cacheControl)),await (0,o.I)(N,O,new Response(l.value.body,{headers:m,status:l.value.status||200})),null};L?await g(L):await K.withPropagatedContext(a.headers,()=>K.trace(m.BaseServerSpan.handleRequest,{spanName:`${J} ${a.url}`,kind:i.SpanKind.SERVER,attributes:{"http.method":J,"http.target":a.url}},g))}catch(b){if(b instanceof s.NoFallbackError||await D.onRequestError(a,b,{routerKind:"App Router",routePath:E,routeType:"route",revalidateReason:(0,n.c)({isRevalidate:I,isOnDemandRevalidate:A})}),F)throw b;return await (0,o.I)(N,O,new Response(null,{status:500})),null}}},78335:()=>{},86439:a=>{"use strict";a.exports=require("next/dist/shared/lib/no-fallback-error.external")},96487:()=>{}};var b=require("../../../webpack-runtime.js");b.C(a);var c=b.X(0,[586,930],()=>b(b.s=76086));module.exports=c})();